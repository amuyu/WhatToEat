apply plugin: 'com.android.application'

ext {
    major = 0
    minor = 1
    revision = 0
    rx = 1

    appVersionName = "$major.$minor.$revision"
}


android {

    Properties localProps = new Properties()
    localProps.load(project.rootProject.file("local.properties").newDataInputStream())

    compileSdkVersion versions.compileSdkVersion
    defaultConfig {
        applicationId "com.amuyu.whattoeat"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetVersion
        versionCode major * 1000000 + minor * 1000 + revision
        versionName appVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary= true
    }
    buildTypes {
        debug {
            resValue "string", "kakao_app_key", localProps.getProperty("KAKAO_APP_KEY","")
            resValue "string", "kakao_scheme", "kakao" + localProps.getProperty("KAKAO_APP_KEY","")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation (name:'typekit-release', ext:'aar')

    implementation "com.android.support:design:$versions.supportLibrary"
    implementation "com.android.support:cardview-v7:$versions.supportLibrary"
    implementation "com.android.support:appcompat-v7:$versions.supportLibrary"
    implementation "com.android.support:recyclerview-v7:$versions.supportLibrary"
    implementation "com.android.support:support-v4:$versions.supportLibrary"
    implementation "com.android.support.constraint:constraint-layout:$versions.constraintLayout"
    implementation "com.android.support:support-vector-drawable:$versions.supportLibrary"

    implementation "com.amuyu:logger:$versions.logger"
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    implementation "com.google.guava:guava:$versions.guava"
    implementation "com.google.code.gson:gson:$versions.gson"

    // Dagger dependencies
    annotationProcessor "com.google.dagger:dagger-compiler:$versions.dagger"
    provided 'org.glassfish:javax.annotation:10.0-b28'
    implementation "com.google.dagger:dagger:$versions.dagger"

    // local unit tests
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'

    // share
    // 카카오링크 sdk를 사용하기 위해 필요.
    implementation group: 'com.kakao.sdk', name: 'kakaolink', version: '1.6.2'
    implementation project(':loading')

    // chipslayout
    implementation 'com.beloo.widget:ChipsLayoutManager:0.3.7@aar'

    // glide
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$versions.glide"
//
//    // FirebaseUI Storage only'
    implementation 'com.firebaseui:firebase-ui-storage:3.1.0'
    implementation 'com.google.firebase:firebase-firestore:11.4.2'

    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'org.mockito:mockito-core:1.10.19'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

apply plugin: 'com.google.gms.google-services'


